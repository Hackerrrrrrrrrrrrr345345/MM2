local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Pet Spawner By Glowing Script", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local Tab = Window:MakeTab({
	Name = "normal (no potion)",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Shadow Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Shadow Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Frost Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Frost Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Bat Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Bat Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Giraffe",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Giraffe" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Owl",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Owl" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Parrot",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Parrot" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Crow",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Crow" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Evil Unicorn",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Evil Unicorn" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Turtle",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Turtle" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Kangaroo",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Kangaroo" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Reindeer",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = false -- flyable
    props[properties[2]] = false -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Reindeer" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

local Tab = Window:MakeTab({
	Name = "normal (Fly and Ride)",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Shadow Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Shadow Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Frost Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Frost Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Bat Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Bat Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Giraffe",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Giraffe" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Owl",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Owl" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Parrot",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Parrot" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Crow",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Crow" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Evil Unicorn",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Evil Unicorn" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Turtle",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Turtle" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Kangaroo",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Kangaroo" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Reindeer",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Reindeer" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

local Tab = Window:MakeTab({
	Name = "Neon (fly and ride)",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Shadow Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Shadow Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Frost Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Frost Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Bat Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Bat Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Giraffe",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Giraffe" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Owl",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Owl" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Parrot",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Parrot" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Crow",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Crow" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Evil Unicorn",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Evil Unicorn" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Turtle",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Turtle" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Kangaroo",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Kangaroo" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Reindeer",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Reindeer" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

local Tab = Window:MakeTab({
	Name = "Mega Neon (Fly and Ride)",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "Shadow Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Shadow Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Frost Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Frost Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Bat Dragon",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Bat Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Giraffe",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Giraffe" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Owl",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Owl" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Parrot",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Parrot" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Crow",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Crow" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Evil Unicorn",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Evil Unicorn" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Turtle",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Turtle" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Kangaroo",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Kangaroo" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

Tab:AddButton({
	Name = "Reindeer",
	Callback = function()
      		local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = false -- neon
    props[properties[4]] = true -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Reindeer" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end
  	end    
})

OrionLib:Init()
